// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Domain.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            Category = 2,
                            DateTime = new DateTime(2025, 4, 16, 20, 23, 3, 838, DateTimeKind.Local).AddTicks(1092),
                            Description = "busco electricista para que me cambie una lamparita",
                            Location = "Rosario",
                            Title = "Busco electricista"
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            Category = 1,
                            DateTime = new DateTime(2025, 4, 16, 20, 23, 3, 838, DateTimeKind.Local).AddTicks(1105),
                            Description = "busco plomero para arreglar mi bano",
                            Location = "Rosario",
                            Title = "Busco plomero"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
